

<script>

function parseCookie(key){
    var cookie = document.cookie
    var cookies = cookie.split(";")
    var variables = []
    for(var i = 0; i < cookies.length; i++){
        variables.push(cookies[i].trim().split("="))
    }
    for(var i = 0; i < variables.length; i++){
        if(variables[i][0] == key){
            return variables[i][1];
        }
    }
    return None;
}

</script>

<html>
    <head>
        <link href="https://fonts.googleapis.com/css?family=Cinzel:700" rel="stylesheet"> 
        <link rel="stylesheet" type="text/css" href="css/common.css"/>
        <link rel="stylesheet" type="text/css" href="css/game.css"/>
        <script src="js/pixi.js"></script>
        <script src="/socket.io/socket.io.js"></script>
    </head>
    <script src="js/resources.js"></script>
	<script src="js/utilities.js"></script>
    <script src="js/game.js"></script>
    <script>
        var your_id = 0;
				var seq_id = 0;
        var socket = io();
        var user_name = "";
        socket.emit('in game');
        socket.on("board accept", function(msg){
            updateStatusBar("Board update successful! Waiting for other player ...", "success")
        });

        socket.on("your id", function(msg){
            msg = JSON.parse(msg)
            your_id = parseInt(msg.id);
            user_name = msg.name;
            console.log("MY ID IS: " + your_id);
            console.log("MY NAME IS: " + user_name);
        });
        console.log(document.cookie);

        socket.on("player turn", function(msg){
            var stage = getStage()
            //console.log("turn switch");
            /**
                * data: shot, hit, seq_id
            **/
            var data = JSON.parse(msg);
						seq_id = data.seq_id;
            //console.log(data+ " " +data.seq_id + " ");
            if (seq_id === 1){
                startGame();
                if(your_id === 1){
                    var board = getOponGrid();
                    //console.log("about to execute turn1");
                    executeTurn(board, stage, data);
                }
            }else{
                var shotloc = data.shot;
                var hit = data.hit;
                //console.log("got a hit: " + data.hit);
                if (your_id !== 0 && ((your_id + seq_id)%2) === 0){
                    // this players turn
			        var board = getOponGrid();
                    executeTurn(board, stage, data);
                }
                else if(your_id !== 0 && ((your_id + seq_id) %2) !== 0){
                    // not this players turn
                    var board = getUserGrid();
                    executeWait(stage,data, board);
                }
            }
        });	
        socket.on("player wins", function(msg){
            if(msg == your_id){
                endMessage(true);
								setTimeout(function(){
										redirectW();
								}, 3000);
            }
            else{
                endMessage(false);
								
								setTimeout(function(){
										redirectL();
								}, 3000);
						}
        });
        socket.on('disconnect', (reason) => {
            if (reason === 'io server disconnect') {
            // the disconnection was initiated by the server, you need to reconnect manually
            updateStatusBar("Disconnected from Server, Reconnecting...", "fail")
            socket.connect();
            }
            updateStatusBar("Disconnected from Server, Reconnecting...", "fail")
            // else the socket will automatically try to reconnect
        });
        socket.on('reconnect', (attemptNumber) => {
            updateStatusBar("Reconnected", "success")
        });
        socket.on("leave game", (message) => {
            updateStatusBar("Other player disconnected, leaving match...", "fail");
            setTimeout(function(){
                window.location.replace("/");
            }, 3000);
        });
        
        
    </script>
    <body style="display:flex; justify-content:center; align-items: center;">
		<button class="question" onclick="openInstructions()">?</button>
        <button class="ready" onclick="sendShips(socket)" >Ready!</button>
		<div id="bottombar" class="bottombar hidden"> 
			<a href="javascript:void(0)" class="closebtn" onclick="closeInstructions()">&times;</a> 
            <p> Click and drag ships to board to place them. <br>
                Right click boats to rotate them. <br>
                Click Ready to lock in selection. </p>
        </div>
        <div id="indicatorD" class="animate">
            <p id="indicatorT"> Place ships on board. </p>
        </div>
        <div id="endWindow" class="end">
            <p id="endText"></p>
        </div>
        <p style="position:absolute; top:-25px; left:20px; width:20%; color:white; font-size:40px"> <script> document.write(parseCookie("name")) </script> </p>
    </body>
</html>